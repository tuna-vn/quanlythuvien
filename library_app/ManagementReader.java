/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library_app;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Admin
 */
public class ManagementReader extends javax.swing.JFrame {

    Connection conn;

    /**
     * Creates new form ManagementReader
     */
    public ManagementReader() {
        initComponents();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nameEdt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        dateEdt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        adressEdt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        phoneEdt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        idEdt = new javax.swing.JTextField();
        issueDate = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        luuBtn = new javax.swing.JButton();
        suaBtn = new javax.swing.JButton();
        xoaBtn = new javax.swing.JButton();
        reportBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        docgiaTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 51, 51));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library_app/adminIcons/icons8_Exit_26px_2.png"))); // NOI18N
        jLabel1.setText("Quay lại");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 40));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tên độc giả");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 90, 30));

        nameEdt.setBackground(new java.awt.Color(102, 102, 255));
        nameEdt.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        nameEdt.setForeground(new java.awt.Color(255, 255, 255));
        nameEdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        nameEdt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        nameEdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameEdtActionPerformed(evt);
            }
        });
        jPanel1.add(nameEdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 200, 50));

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Ngày sinh");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 90, 30));

        dateEdt.setBackground(new java.awt.Color(102, 102, 255));
        dateEdt.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        dateEdt.setForeground(new java.awt.Color(255, 255, 255));
        dateEdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        dateEdt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        dateEdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateEdtActionPerformed(evt);
            }
        });
        jPanel1.add(dateEdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 160, 50));

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Địa chỉ");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 90, 30));

        adressEdt.setBackground(new java.awt.Color(102, 102, 255));
        adressEdt.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        adressEdt.setForeground(new java.awt.Color(255, 255, 255));
        adressEdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        adressEdt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        adressEdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adressEdtActionPerformed(evt);
            }
        });
        jPanel1.add(adressEdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 200, 50));

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Số điện thoại");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 110, 30));

        phoneEdt.setBackground(new java.awt.Color(102, 102, 255));
        phoneEdt.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        phoneEdt.setForeground(new java.awt.Color(255, 255, 255));
        phoneEdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        phoneEdt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        phoneEdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneEdtFocusLost(evt);
            }
        });
        phoneEdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneEdtActionPerformed(evt);
            }
        });
        jPanel1.add(phoneEdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 170, 50));

        jLabel20.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Mã độc giả");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 90, 30));

        idEdt.setBackground(new java.awt.Color(102, 102, 255));
        idEdt.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        idEdt.setForeground(new java.awt.Color(255, 255, 255));
        idEdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        idEdt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        idEdt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idEdtFocusLost(evt);
            }
        });
        idEdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idEdtActionPerformed(evt);
            }
        });
        jPanel1.add(idEdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 160, 50));

        issueDate.setBackground(new java.awt.Color(102, 102, 255));
        issueDate.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        issueDate.setForeground(new java.awt.Color(255, 255, 255));
        issueDate.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        issueDate.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        issueDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueDateActionPerformed(evt);
            }
        });
        jPanel1.add(issueDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 170, 50));

        jLabel23.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Ngày đăng kí");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 130, 30));

        luuBtn.setBackground(new java.awt.Color(255, 51, 51));
        luuBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        luuBtn.setForeground(new java.awt.Color(255, 255, 255));
        luuBtn.setText("Lưu");
        luuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuBtnActionPerformed(evt);
            }
        });
        jPanel1.add(luuBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 100, 50));

        suaBtn.setBackground(new java.awt.Color(255, 51, 51));
        suaBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        suaBtn.setForeground(new java.awt.Color(255, 255, 255));
        suaBtn.setText("Sửa");
        suaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaBtnActionPerformed(evt);
            }
        });
        jPanel1.add(suaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, 100, 50));

        xoaBtn.setBackground(new java.awt.Color(255, 51, 51));
        xoaBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        xoaBtn.setForeground(new java.awt.Color(255, 255, 255));
        xoaBtn.setText("Xóa");
        xoaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaBtnActionPerformed(evt);
            }
        });
        jPanel1.add(xoaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 430, 100, 50));

        reportBtn.setBackground(new java.awt.Color(255, 51, 51));
        reportBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        reportBtn.setForeground(new java.awt.Color(255, 255, 255));
        reportBtn.setText("In báo cáo");
        reportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportBtnActionPerformed(evt);
            }
        });
        jPanel1.add(reportBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 120, 50));

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Tìm Kiếm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 510, 100, 50));

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Hiển thị");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 510, 100, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 670));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library_app/adminIcons/icons8_Books_26px.png"))); // NOI18N
        jLabel2.setText("Quản lý độc giả");

        docgiaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã độc giả", "Tên độc giả", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Email", "Ngày đăng kí"
            }
        ));
        docgiaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docgiaTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(docgiaTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 680, 670));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void reportJasper2(String mdg, String tendg, String sdt) {
        try {
            conn = ConnectDB.KetnoiDB();
            String path = "C:\\Users\\Admin\\JaspersoftWorkspace\\MyReports\\docgia.jrxml";
            JasperReport jr = JasperCompileManager.compileReport(path);
            HashMap<String, Object> pa = new HashMap<>();
            pa.put("madg", mdg);
            pa.put("tendg", tendg);
            pa.put("sdt", sdt);
            JasperPrint jp = JasperFillManager.fillReport(jr, pa, conn);
            JasperViewer.viewReport(jp, false);
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void reportJasper() {
        try {
            conn = ConnectDB.KetnoiDB();
            String path = "C:\\Users\\Admin\\JaspersoftWorkspace\\MyReports\\docgia2.jrxml";
            JasperReport jr = JasperCompileManager.compileReport(path);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperViewer.viewReport(jp, false);
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean checkDuplicatePhone() {
        String phone = phoneEdt.getText().toString();
        boolean isExit = false;
        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "Select * From docgia Where SDT='" + phone + "'";
            Statement st = conn.createStatement();
            ResultSet s = st.executeQuery(sql);

            if (s.next()) {
                isExit = true;
            } else {
                isExit = false;
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return isExit;
    }

    private boolean checkDuplicateID() {
        String id = idEdt.getText().toString();
        boolean isExit = false;
        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "Select * From docgia Where MaDG='" + id + "'";
            Statement st = conn.createStatement();
            ResultSet s = st.executeQuery(sql);

            if (s.next()) {
                isExit = true;
            } else {
                isExit = false;
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return isExit;
    }

    private boolean validateDG() {
        String date = dateEdt.getText().toString();
        String issuedate = issueDate.getText().toString();
        String phone = phoneEdt.getText().toString();
//      String email=emailEdt.getText().toString();
        if (!date.matches("^\\d{4}-\\d{1,2}-\\d{1,2}$")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập theo định dạng ngày sinh theo Năm-Tháng-Ngày");
            return false;
        }
        if (!issuedate.matches("^\\d{4}-\\d{1,2}-\\d{1,2}$")) {
            JOptionPane.showMessageDialog(rootPane, "Hãy nhập theo định dạng ngày sinh theo Năm-Tháng-Ngày");
            return false;
        }
        if (!phone.matches("^(\\+84|84|0)(3|5|7|8|9)[0-9]{8}$")) {
            JOptionPane.showMessageDialog(rootPane, "Số điện thoại bắt đầu bằng +84 hoặc 0");
            return false;
        }

        return true;
    }

    private void delete() {
        String id = idEdt.getText().toString();
        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "Delete from docgia Where MaDG=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, id);

            ps.executeUpdate();

            load();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void updateDG() {
        String id = idEdt.getText().toString();
        String name = nameEdt.getText().toString();
        String date = dateEdt.getText().toString();
        String adress = adressEdt.getText().toString();
        String phone = phoneEdt.getText().toString();
//        String email=emailEdt.getText().toString();
        String issuedate = issueDate.getText().toString();

        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "Update docgia set TenDG=?,NgaySinh=?,DiaChi=?,SDT=?,Ngaydangky=? Where MaDG=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, name);
            ps.setString(2, date);
            ps.setString(3, adress);
            ps.setString(4, phone);
            ps.setString(5, issuedate);
            ps.setString(6, id);
            ps.executeUpdate();
JOptionPane.showMessageDialog(rootPane, "Đã sửa thành công!");
            load();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void insertDG() {
        String id = idEdt.getText().toString();
        String name = nameEdt.getText().toString();
        String date = dateEdt.getText().toString();
        String adress = adressEdt.getText().toString();
        String phone = phoneEdt.getText().toString();
        String issuedate = issueDate.getText().toString();

        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "Insert docgia(MaDG,TenDG,NgaySinh,DiaChi,SDT,NgayDangky) Values (?,?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, id);
            ps.setString(2, name);
            ps.setString(3, date);
            ps.setString(4, adress);
            ps.setString(5, phone);
            ps.setString(6, issuedate);
            ps.execute();

            load();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void TK() {
        try {
            docgiaTable.removeAll(); // Xóa bảng trước khi nạp dữ liệu mới
            String id = idEdt.getText().trim();
            String name = nameEdt.getText().trim();
            String phone = phoneEdt.getText().trim();
            conn = ConnectDB.KetnoiDB(); // Kết nối đến cơ sở dữ liệu
            String sql = "SELECT * FROM docgia WHERE MaDG LIKE ? AND TenDG LIKE ? AND SDT LIKE ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, "%" + id + "%");
            ps.setString(2, "%" + name + "%");
            ps.setString(3, "%" + phone + "%");
            ResultSet rs = ps.executeQuery();
            String[] arr = {"Mã độc giả", "Tên độc giả", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Ngày đăng ký"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            while (rs.next()) {
                Vector<String> vt = new Vector<>();
                vt.add(rs.getString("MaDG"));       // Tên cột cần khớp với tên trong cơ sở dữ liệu
                vt.add(rs.getString("TenDG"));
                vt.add(rs.getString("NgaySinh"));
                vt.add(rs.getString("DiaChi"));
                vt.add(rs.getString("SDT"));
                vt.add(rs.getString("NgayDangKy")); // Cần khớp tên cột với bảng
                model.addRow(vt); // Thêm dòng vào mô hình bảng
            }
            docgiaTable.setModel(model);
            rs.close();
            ps.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void load() {
        docgiaTable.removeAll();
        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "Select * From docgia";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet rs = s.executeQuery();

            String[] arr = {"Mã độc giả", "Tên độc giả", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Ngày đăng ký"};
            DefaultTableModel model = new DefaultTableModel(arr, 0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString(1).toString());
                v.add(rs.getString(2).toString());
                v.add(rs.getString(3).toString());
                v.add(rs.getString(4).toString());
                v.add(rs.getString(5).toString());
                v.add(rs.getString(6).toString());
                model.addRow(v);
            }
            docgiaTable.setModel(model);
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void nameEdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameEdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameEdtActionPerformed

    private void dateEdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateEdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateEdtActionPerformed

    private void adressEdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adressEdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_adressEdtActionPerformed

    private void phoneEdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneEdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneEdtActionPerformed

    private void issueDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_issueDateActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        Home h = new Home();
        h.setVisible(true);
        dispose();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void luuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuBtnActionPerformed
        // TODO add your handling code here:
        if (validateDG() == true) {
            if (checkDuplicateID() == false && checkDuplicatePhone() == false) {
                insertDG();
            } else {
                if (checkDuplicateID()) {
                    JOptionPane.showMessageDialog(rootPane, "Trùng mã độc giả");
                }
                if (checkDuplicatePhone()) {
                    JOptionPane.showMessageDialog(rootPane, "Trùng số điện thoại");
                }
            }
        }

    }//GEN-LAST:event_luuBtnActionPerformed

    private void docgiaTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docgiaTableMouseClicked
        // TODO add your handling code here:
        try {
            int i = docgiaTable.getSelectedRow();
            idEdt.setText(docgiaTable.getValueAt(i, 0).toString());
            nameEdt.setText(docgiaTable.getValueAt(i, 1).toString());
            dateEdt.setText(docgiaTable.getValueAt(i, 2).toString());
            adressEdt.setText(docgiaTable.getValueAt(i, 3).toString());
            phoneEdt.setText(docgiaTable.getValueAt(i, 4).toString());
            issueDate.setText(docgiaTable.getValueAt(i, 5).toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_docgiaTableMouseClicked

    private void suaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaBtnActionPerformed
        // TODO add your handling code here:
        if (validateDG() == true) {
            updateDG();
        }
    }//GEN-LAST:event_suaBtnActionPerformed

    private void xoaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaBtnActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_xoaBtnActionPerformed

    private void phoneEdtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneEdtFocusLost
        // TODO add your handling code here:
        if (checkDuplicatePhone() == true) {
            JOptionPane.showMessageDialog(rootPane, "Đã có SDT này rồi");
        }
    }//GEN-LAST:event_phoneEdtFocusLost

    private void reportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportBtnActionPerformed
        // TODO add your handling code here:
        String id = idEdt.getText().toString();
        String name = nameEdt.getText().toString();
        String sdt = phoneEdt.getText().toString();
        if (id.isEmpty() && name.isEmpty() && sdt.isEmpty()) {
            reportJasper();
        } else {

            reportJasper2(id, name, sdt);
        }
    }//GEN-LAST:event_reportBtnActionPerformed

    private void idEdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idEdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idEdtActionPerformed

    private void idEdtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idEdtFocusLost
        // TODO add your handling code here:
//        if (checkDuplicateID() == true) {
//            JOptionPane.showMessageDialog(rootPane, "Đã có ID này rồi");
//        }
    }//GEN-LAST:event_idEdtFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TK(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        load(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagementReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagementReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagementReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagementReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagementReader().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adressEdt;
    private javax.swing.JTextField dateEdt;
    private javax.swing.JTable docgiaTable;
    private javax.swing.JTextField idEdt;
    private javax.swing.JTextField issueDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton luuBtn;
    private javax.swing.JTextField nameEdt;
    private javax.swing.JTextField phoneEdt;
    private javax.swing.JButton reportBtn;
    private javax.swing.JButton suaBtn;
    private javax.swing.JButton xoaBtn;
    // End of variables declaration//GEN-END:variables
}
